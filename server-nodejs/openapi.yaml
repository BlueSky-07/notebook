openapi: 3.0.0
paths:
  /flow/full/{id}:
    get:
      operationId: getFlowFull
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FlowFull"
      tags:
        - Flow
  /flow:
    post:
      operationId: addFlow
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FlowAddInput"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FlowAddResponse"
      tags:
        - Flow
    get:
      operationId: getAllFlows
      parameters:
        - name: pageSize
          required: false
          in: query
          schema:
            default: 10
            type: number
        - name: pageNumber
          required: false
          in: query
          schema:
            default: 0
            type: number
        - name: keyword
          required: false
          in: query
          schema:
            type: string
        - name: populateCount
          required: false
          in: query
          description: return node and edges count fields
          schema:
            type: boolean
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FlowListResponse"
      tags:
        - Flow
  /flow/{id}:
    patch:
      operationId: patchFlow
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FlowPatchInput"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FlowEntity"
      tags:
        - Flow
    get:
      operationId: getFlow
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FlowEntity"
      tags:
        - Flow
    delete:
      operationId: deleteFlow
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FlowDeleteResponse"
      tags:
        - Flow
  /node/batch:
    post:
      operationId: addNodes
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchNodeAddInput"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchNodeAddResponse"
      tags:
        - Node
    patch:
      operationId: patchNodes
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchNodePatchInput"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NodeEntity"
      tags:
        - Node
    get:
      operationId: getNodes
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NodeEntity"
      tags:
        - Node
    delete:
      operationId: deleteNodes
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchNodeDeleteInput"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NodeDeleteResponse"
      tags:
        - Node
  /node:
    post:
      operationId: addNode
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NodeAddInput"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NodeAddResponse"
      tags:
        - Node
  /node/{id}:
    patch:
      operationId: patchNode
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NodePatchInput"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NodeEntity"
      tags:
        - Node
    get:
      operationId: getNode
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NodeEntity"
      tags:
        - Node
    delete:
      operationId: deleteNode
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NodeDeleteResponse"
      tags:
        - Node
  /edge/batch:
    post:
      operationId: addEdges
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchEdgeAddInput"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchEdgeAddResponse"
      tags:
        - Edge
    patch:
      operationId: patchEdges
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchEdgePatchInput"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EdgeEntity"
      tags:
        - Edge
    get:
      operationId: getEdges
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EdgeEntity"
      tags:
        - Edge
    delete:
      operationId: deleteEdges
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchEdgeDeleteInput"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EdgeDeleteResponse"
      tags:
        - Edge
  /edge:
    post:
      operationId: addEdge
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EdgeAddInput"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EdgeAddResponse"
      tags:
        - Edge
  /edge/{id}:
    patch:
      operationId: patchEdge
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EdgePatchInput"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EdgeEntity"
      tags:
        - Edge
    get:
      operationId: getEdge
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EdgeEntity"
      tags:
        - Edge
    delete:
      operationId: deleteEdge
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EdgeDeleteResponse"
      tags:
        - Edge
  /generating-task:
    post:
      operationId: addGeneratingTask
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GeneratingTaskAddInput"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GeneratingTaskAddResponse"
      tags:
        - GeneratingTask
  /generating-task/{id}/stop:
    post:
      operationId: stopGeneratingTask
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GeneratingTaskStopResponse"
      tags:
        - GeneratingTask
  /generating-task/{id}:
    get:
      operationId: getGeneratingTask
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GeneratingTaskEntity"
      tags:
        - GeneratingTask
  /ai/models:
    get:
      operationId: getAllModels
      parameters: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AiModelsResponse"
      tags:
        - Ai
  /file/info:
    get:
      operationId: getFileInfo
      parameters:
        - name: id
          required: false
          in: query
          schema:
            default: ""
            type: number
        - name: path
          required: false
          in: query
          schema:
            default: ""
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileEntity"
      tags:
        - File
  /file/object:
    get:
      operationId: getFileObject
      parameters:
        - name: id
          required: false
          in: query
          schema:
            default: ""
            type: number
        - name: path
          required: false
          in: query
          schema:
            default: ""
            type: string
      responses:
        "200":
          description: ""
      tags:
        - File
  /file/admin/clear-no-references:
    delete:
      operationId: clearNoReferencesFiles
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FileAdminClearNoReferencesInput"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileAdminClearNoReferencesResponse"
      tags:
        - File
  /file:
    post:
      operationId: uploadFileObject
      parameters: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/FileAddInput"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileEntity"
      tags:
        - File
    delete:
      operationId: deleteFile
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FileQueryInput"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileDeleteResponse"
      tags:
        - File
info:
  title: Notebook Server
  description: ""
  version: 1.0.0
  contact: {}
tags: []
servers: []
components:
  schemas:
    NodeDataTypeEnum:
      type: string
      enum:
        - Text
        - Image
    NodeLayout:
      type: object
      properties:
        positionX:
          type: number
        positionY:
          type: number
        width:
          type: number
        height:
          type: number
        hidden:
          type: boolean
          description: hidden
      required:
        - positionX
        - positionY
        - width
        - height
    NodeData:
      type: object
      properties:
        content:
          type: string
          description: text content
        src:
          type: string
          description: image src
        fileId:
          type: number
          description: file id
        background:
          type: string
          description: background (css)
    GeneratingTaskStatusEnum:
      type: string
      enum:
        - Pending
        - Generating
        - Done
        - Failed
        - Stopped
      description: AI generating task status
    NodeState:
      type: object
      properties:
        generatingTaskId:
          type: number
          description: AI generating task id
        generatingTaskStatus:
          default: Pending
          description: AI generating task status
          allOf:
            - $ref: "#/components/schemas/GeneratingTaskStatusEnum"
    NodeEntity:
      type: object
      properties:
        dataType:
          default: Text
          allOf:
            - $ref: "#/components/schemas/NodeDataTypeEnum"
        id:
          type: number
        flowId:
          type: number
        layout:
          $ref: "#/components/schemas/NodeLayout"
        data:
          $ref: "#/components/schemas/NodeData"
        state:
          $ref: "#/components/schemas/NodeState"
        updatedAt:
          format: date-time
          type: string
      required:
        - id
        - flowId
        - layout
        - data
        - state
        - updatedAt
    EdgeDataTypeEnum:
      type: string
      enum:
        - Label
    EdgeHandleEnum:
      type: string
      enum:
        - Top
        - Right
        - Bottom
        - Left
      description: Source handle position
    EdgeLayout:
      type: object
      properties:
        sourceHandle:
          default: Right
          description: Source handle position
          allOf:
            - $ref: "#/components/schemas/EdgeHandleEnum"
        targetHandle:
          default: Top
          description: Target handle position
          allOf:
            - $ref: "#/components/schemas/EdgeHandleEnum"
    EdgeData:
      type: object
      properties:
        label:
          type: string
          description: label content
    EdgeEntity:
      type: object
      properties:
        dataType:
          default: Label
          allOf:
            - $ref: "#/components/schemas/EdgeDataTypeEnum"
        id:
          type: number
        flowId:
          type: number
        sourceNodeId:
          type: number
        targetNodeId:
          type: number
        layout:
          $ref: "#/components/schemas/EdgeLayout"
        data:
          $ref: "#/components/schemas/EdgeData"
        updatedAt:
          format: date-time
          type: string
      required:
        - id
        - flowId
        - layout
        - data
        - updatedAt
    FlowFull:
      type: object
      properties:
        flowId:
          type: number
        name:
          type: string
        updatedAt:
          format: date-time
          type: string
        nodes:
          type: array
          items:
            $ref: "#/components/schemas/NodeEntity"
        edges:
          type: array
          items:
            $ref: "#/components/schemas/EdgeEntity"
      required:
        - flowId
        - name
        - updatedAt
        - nodes
        - edges
    FlowAddInput:
      type: object
      properties:
        name:
          type: string
      required:
        - name
    FlowAddResponse:
      type: object
      properties:
        id:
          type: number
      required:
        - id
    FlowPatchInput:
      type: object
      properties:
        name:
          type: string
    FlowEntity:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        updatedAt:
          format: date-time
          type: string
      required:
        - id
        - name
        - updatedAt
    FlowEntityPopulatedCount:
      type: object
      properties:
        nodeCount:
          type: number
          description: node count
        edgeCount:
          type: number
          description: edge count
        id:
          type: number
        name:
          type: string
        updatedAt:
          format: date-time
          type: string
      required:
        - id
        - name
        - updatedAt
    FlowListResponse:
      type: object
      properties:
        count:
          type: number
        items:
          type: array
          items:
            $ref: "#/components/schemas/FlowEntityPopulatedCount"
      required:
        - count
        - items
    FlowDeleteResponse:
      type: object
      properties:
        done:
          type: boolean
      required:
        - done
    NodeAddInput:
      type: object
      properties:
        flowId:
          type: number
        layout:
          default:
            positionX: 0
            positionY: 0
            width: 100
            height: 100
          allOf:
            - $ref: "#/components/schemas/NodeLayout"
        data:
          default:
            content: ""
          allOf:
            - $ref: "#/components/schemas/NodeData"
        dataType:
          default: Text
          allOf:
            - $ref: "#/components/schemas/NodeDataTypeEnum"
      required:
        - flowId
        - layout
    BatchNodeAddInput:
      type: object
      properties:
        nodes:
          type: array
          items:
            $ref: "#/components/schemas/NodeAddInput"
      required:
        - nodes
    BatchNodeAddResponse:
      type: object
      properties:
        ids:
          type: array
          items:
            type: number
      required:
        - ids
    BatchNodePatchInputItem:
      type: object
      properties:
        layout:
          default:
            positionX: 0
            positionY: 0
            width: 100
            height: 100
          allOf:
            - $ref: "#/components/schemas/NodeLayout"
        data:
          $ref: "#/components/schemas/NodeData"
        dataType:
          default: Text
          allOf:
            - $ref: "#/components/schemas/NodeDataTypeEnum"
        state:
          $ref: "#/components/schemas/NodeState"
        id:
          type: number
      required:
        - id
    BatchNodePatchInput:
      type: object
      properties:
        nodes:
          type: array
          items:
            $ref: "#/components/schemas/BatchNodePatchInputItem"
      required:
        - nodes
    BatchNodeDeleteInput:
      type: object
      properties:
        ids:
          type: array
          items:
            type: number
      required:
        - ids
    NodeDeleteResponse:
      type: object
      properties:
        done:
          type: boolean
      required:
        - done
    NodeAddResponse:
      type: object
      properties:
        id:
          type: number
      required:
        - id
    NodePatchInput:
      type: object
      properties:
        layout:
          default:
            positionX: 0
            positionY: 0
            width: 100
            height: 100
          allOf:
            - $ref: "#/components/schemas/NodeLayout"
        data:
          $ref: "#/components/schemas/NodeData"
        dataType:
          default: Text
          allOf:
            - $ref: "#/components/schemas/NodeDataTypeEnum"
        state:
          $ref: "#/components/schemas/NodeState"
    EdgeAddInput:
      type: object
      properties:
        flowId:
          type: number
        sourceNodeId:
          type: number
        targetNodeId:
          type: number
        layout:
          default:
            sourceHandle: Right
            targetHandle: Top
          allOf:
            - $ref: "#/components/schemas/EdgeLayout"
        data:
          default:
            label: ""
          allOf:
            - $ref: "#/components/schemas/EdgeData"
        dataType:
          default: Label
          allOf:
            - $ref: "#/components/schemas/EdgeDataTypeEnum"
      required:
        - flowId
        - layout
    BatchEdgeAddInput:
      type: object
      properties:
        edges:
          type: array
          items:
            $ref: "#/components/schemas/EdgeAddInput"
      required:
        - edges
    BatchEdgeAddResponse:
      type: object
      properties:
        ids:
          type: array
          items:
            type: number
      required:
        - ids
    BatchEdgePatchInputItem:
      type: object
      properties:
        sourceNodeId:
          type: number
        targetNodeId:
          type: number
        layout:
          default:
            sourceHandle: Right
            targetHandle: Top
          allOf:
            - $ref: "#/components/schemas/EdgeLayout"
        data:
          $ref: "#/components/schemas/EdgeData"
        dataType:
          default: Label
          allOf:
            - $ref: "#/components/schemas/EdgeDataTypeEnum"
        id:
          type: number
      required:
        - id
    BatchEdgePatchInput:
      type: object
      properties:
        edges:
          type: array
          items:
            $ref: "#/components/schemas/BatchEdgePatchInputItem"
      required:
        - edges
    BatchEdgeDeleteInput:
      type: object
      properties:
        ids:
          type: array
          items:
            type: number
      required:
        - ids
    EdgeDeleteResponse:
      type: object
      properties:
        done:
          type: boolean
      required:
        - done
    EdgeAddResponse:
      type: object
      properties:
        id:
          type: number
      required:
        - id
    EdgePatchInput:
      type: object
      properties:
        sourceNodeId:
          type: number
        targetNodeId:
          type: number
        layout:
          default:
            sourceHandle: Right
            targetHandle: Top
          allOf:
            - $ref: "#/components/schemas/EdgeLayout"
        data:
          $ref: "#/components/schemas/EdgeData"
        dataType:
          default: Label
          allOf:
            - $ref: "#/components/schemas/EdgeDataTypeEnum"
    GeneratingTaskInputInAddInput:
      type: object
      properties:
        modelId:
          type: string
          description: model id
        sourceNodeIds:
          description: generating from source nodes
          type: array
          items:
            type: number
        edgeIds:
          description: generating from source edges
          type: array
          items:
            type: number
      required:
        - modelId
        - sourceNodeIds
        - edgeIds
    GeneratingTaskAddInput:
      type: object
      properties:
        flowId:
          type: number
        targetNodeId:
          type: number
        input:
          $ref: "#/components/schemas/GeneratingTaskInputInAddInput"
      required:
        - flowId
        - targetNodeId
        - input
    GeneratingTaskAddResponse:
      type: object
      properties:
        id:
          type: number
      required:
        - id
    GeneratingTaskStopResponse:
      type: object
      properties:
        done:
          type: boolean
      required:
        - done
    GeneratingTaskInputPromptType:
      type: string
      enum:
        - Text
        - Image
    GeneratingTaskInputPrompt:
      type: object
      properties:
        type:
          allOf:
            - $ref: "#/components/schemas/GeneratingTaskInputPromptType"
        text:
          type: string
        src:
          type: string
      required:
        - type
    GeneratingTaskInput:
      type: object
      properties:
        modelId:
          type: string
          description: model id
        prompt:
          description: prompt to trigger generating task
          type: array
          items:
            $ref: "#/components/schemas/GeneratingTaskInputPrompt"
        sourceNodeSnapshots:
          type: array
          items:
            required: false
            description: generating from source nodes
            type: array
            items:
              $ref: "#/components/schemas/NodeEntity"
        edgeSnapshots:
          description: generating from source edges
          type: array
          items:
            $ref: "#/components/schemas/EdgeEntity"
      required:
        - sourceNodeSnapshots
    GeneratedUsage:
      type: object
      properties:
        promptTokens:
          type: number
          description: prompt tokens
        completionTokens:
          type: number
          description: completion tokens
        totalTokens:
          type: number
          description: total tokens
      required:
        - promptTokens
        - completionTokens
        - totalTokens
    GeneratingTaskOutput:
      type: object
      properties:
        generatedText:
          type: string
          description: generated content
        generatedFile:
          type: number
          nullable: true
          description: generated file
        generatedReasoning:
          type: string
          description: generated reasoning
        generatedUsage:
          description: generated usage
          allOf:
            - $ref: "#/components/schemas/GeneratedUsage"
        errorMessage:
          type: string
          description: error message
    GeneratingTaskEntity:
      type: object
      properties:
        status:
          default: Pending
          allOf:
            - $ref: "#/components/schemas/GeneratingTaskStatusEnum"
        id:
          type: number
        flowId:
          type: number
        targetNodeId:
          type: number
        input:
          $ref: "#/components/schemas/GeneratingTaskInput"
        output:
          $ref: "#/components/schemas/GeneratingTaskOutput"
        updatedAt:
          format: date-time
          type: string
      required:
        - status
        - id
        - flowId
        - targetNodeId
        - input
        - output
        - updatedAt
    AiModelInfo:
      type: object
      properties:
        id:
          type: string
        provider:
          type: string
        modelName:
          type: string
        features:
          type: array
          items:
            type: string
      required:
        - id
        - provider
        - modelName
        - features
    AiModelsResponse:
      type: object
      properties:
        enabled:
          type: boolean
        models:
          type: array
          items:
            $ref: "#/components/schemas/AiModelInfo"
      required:
        - enabled
        - models
    StorageBucketName:
      type: string
      enum:
        - uploaded
        - generated
        - temp
    FileMetadata:
      type: object
      properties:
        extension:
          type: string
          description: filename extension
        size:
          type: number
          description: "file size, unit: byte"
        mime:
          type: string
          description: MIME
        width:
          type: number
          description: image file width
        height:
          type: number
          description: image file height
      required:
        - extension
        - size
        - mime
    FileEntity:
      type: object
      properties:
        bucket:
          default: uploaded
          allOf:
            - $ref: "#/components/schemas/StorageBucketName"
        id:
          type: number
        name:
          type: string
        description:
          type: string
        path:
          type: string
        metadata:
          $ref: "#/components/schemas/FileMetadata"
        updatedAt:
          format: date-time
          type: string
      required:
        - bucket
        - id
        - name
        - description
        - path
        - metadata
        - updatedAt
    FileAdminClearNoReferencesInput:
      type: object
      properties:
        dryRun:
          type: boolean
          default: true
    FileAdminClearNoReferencesResponse:
      type: object
      properties:
        ids:
          description: id of deleted files
          type: array
          items:
            type: number
        count:
          type: number
          description: count of deleted files
      required:
        - ids
        - count
    FileAddInput:
      type: object
      properties:
        name:
          type: string
          description: filename
          default: ""
        description:
          type: string
          default: ""
        file:
          type: string
          format: binary
      required:
        - file
    FileQueryInput:
      type: object
      properties:
        id:
          type: number
          default: ""
        path:
          type: string
          default: ""
    FileDeleteResponse:
      type: object
      properties:
        done:
          type: boolean
      required:
        - done
